name: CI

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: .ruby-version
        bundler-cache: true

    - name: Run StandardRB
      run: bundle exec standardrb

    - name: Check for trailing whitespace
      run: ./.github/scripts/check-whitespace.sh
      continue-on-error: true

  test:
    runs-on: ubuntu-latest
    name: Test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: .ruby-version
        bundler-cache: true

    - run: bundle exec rspec

  validate-registries:
    runs-on: ubuntu-latest
    name: Validate ${{ matrix.registry-name }}
    strategy:
      matrix:
        include:
          - registry: "gcr.io/datadoghq/apm-inject"
            registry-name: "apm-inject"
            file-suffix: "inject"
          - registry: "gcr.io/datadoghq/dd-lib-java-init"
            registry-name: "dd-lib-java-init"
            file-suffix: "java"
          - registry: "gcr.io/datadoghq/dd-lib-ruby-init"
            registry-name: "dd-lib-ruby-init"
            file-suffix: "ruby"
          - registry: "gcr.io/datadoghq/dd-lib-python-init"
            registry-name: "dd-lib-python-init"
            file-suffix: "python"
          - registry: "gcr.io/datadoghq/dd-lib-js-init"
            registry-name: "dd-lib-js-init"
            file-suffix: "js"
          - registry: "gcr.io/datadoghq/dd-lib-dotnet-init"
            registry-name: "dd-lib-dotnet-init"
            file-suffix: "dotnet"
          - registry: "gcr.io/datadoghq/dd-lib-php-init"
            registry-name: "dd-lib-php-init"
            file-suffix: "php"
      fail-fast: false  # Continue testing other registries even if one fails

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: .ruby-version
        bundler-cache: true
    - run: bundle install
    - name: Make equilibrium executable
      run: chmod +x ./equilibrium

    - name: Validate ${{ matrix.registry-name }} registry
      run: |
        echo "üîç Validating ${{ matrix.registry }}..."
        bundle exec ./equilibrium expected ${{ matrix.registry }} > expected-${{ matrix.file-suffix }}.json
        bundle exec ./equilibrium actual ${{ matrix.registry }} > actual-${{ matrix.file-suffix }}.json
        bundle exec ./equilibrium analyze --expected expected-${{ matrix.file-suffix }}.json --actual actual-${{ matrix.file-suffix }}.json --format json > analysis-${{ matrix.file-suffix }}.json

        # Display results
        echo "üìä Analysis Results for ${{ matrix.registry-name }}:"
        cat analysis-${{ matrix.file-suffix }}.json | jq '.'

        # Check if registry is in equilibrium
        status=$(cat analysis-${{ matrix.file-suffix }}.json | jq -r '.status')
        if [ "$status" != "perfect" ]; then
          echo "‚ùå Registry ${{ matrix.registry-name }} is NOT in equilibrium (status: $status)"
          echo "üìã Remediation plan:"
          cat analysis-${{ matrix.file-suffix }}.json | jq -r '.remediation_plan[].command'
          exit 1
        else
          echo "‚úÖ Registry ${{ matrix.registry-name }} is in perfect equilibrium!"
        fi

    - name: Upload analysis results as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: equilibrium-analysis-${{ matrix.file-suffix }}
        path: |
          expected-${{ matrix.file-suffix }}.json
          actual-${{ matrix.file-suffix }}.json
          analysis-${{ matrix.file-suffix }}.json
        retention-days: 30